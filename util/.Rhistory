ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
grep('Atte', d$name)
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country = 'Netherlands (NL)',
role = 'GHM',
workgroups = '',
mc = FALSE
))
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
strsplit(d$workgroups, ';')
d$workgroups
strsplit(d$workgroups, ';')
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
people
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
## first make sure mc and d match with country data
fix_country_code <- function(x) {
x[x == 'UK'] = 'GB'
x[x == 'EL'] = 'GR'
}
mc$country_code = mc$`CTRY *` %>% fix_country_code
d$country_code = str_extract(d$country, '(?<=\\()[A-Z]+(?=\\))') %>% fix_country_code
## if there are mismatches left, add them to fix countries
mismatches = unique(c(mc$country_code, d$country_code))
mismatches[!mismatches %in% countries$code]
d$workgroups = sapply(1:nrow(d), function(i) {
wgs = which(d[i,grep('WG[1-4]', colnames(d))] == 'y')
wgs= c("Theory", "Tools", "Data", "Dissemination")[wgs]
paste(wgs, collapse=';')
})
d = data.frame(
name = paste(d$firstName, d$lastName, sep=' '),
homepages = d$homepages,
country_code = d$country_code,
email = d$email,
role = NA,
workgroups = d$workgroups,
mc = d$email %in% mc$Email
)
add = mc[!mc$Email %in% d$email,]
add = data.frame(
name = paste(add$Firstname, add$Lastname, sep=' '),
homepages = '',
country_code = add$country_code,
email = add$Email,
role = NA,
workgroups = '',
mc = TRUE
)
d = rbind(d, add)
set_role = function(d, name, role) {
ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
i=1
workgroups = d$workgroups[i]
workgroups
workgroups = d$workgroups[3]
workgroups
workgroups = d$workgroups[6]
workgroups
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
## first make sure mc and d match with country data
fix_country_code <- function(x) {
x[x == 'UK'] = 'GB'
x[x == 'EL'] = 'GR'
}
mc$country_code = mc$`CTRY *` %>% fix_country_code
d$country_code = str_extract(d$country, '(?<=\\()[A-Z]+(?=\\))') %>% fix_country_code
## if there are mismatches left, add them to fix countries
mismatches = unique(c(mc$country_code, d$country_code))
mismatches[!mismatches %in% countries$code]
d$workgroups = sapply(1:nrow(d), function(i) {
wgs = which(d[i,grep('WG[1-4]', colnames(d))] == 'y')
wgs= c("Theory", "Tools", "Data", "Dissemination")[wgs]
paste0('[', paste(wgs, collapse=', '), ']')
})
d = data.frame(
name = paste(d$firstName, d$lastName, sep=' '),
homepages = d$homepages,
country_code = d$country_code,
email = d$email,
role = NA,
workgroups = d$workgroups,
mc = d$email %in% mc$Email
)
add = mc[!mc$Email %in% d$email,]
add = data.frame(
name = paste(add$Firstname, add$Lastname, sep=' '),
homepages = '',
country_code = add$country_code,
email = add$Email,
role = NA,
workgroups = '',
mc = TRUE
)
d = rbind(d, add)
set_role = function(d, name, role) {
ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
cat('people:\n', paste(people, collapse='\n'))
countries
countries %>%
select(country=name, country_code=code, countr_flag=emoji) %>%
right_join(d)
d
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
## first make sure mc and d match with country data
fix_country_code <- function(x) {
x[x == 'UK'] = 'GB'
x[x == 'EL'] = 'GR'
x
}
mc$country_code = mc$`CTRY *` %>% fix_country_code
d$country_code = str_extract(d$country, '(?<=\\()[A-Z]+(?=\\))') %>% fix_country_code
## if there are mismatches left, add them to fix countries
mismatches = unique(c(mc$country_code, d$country_code))
mismatches[!mismatches %in% countries$code]
d$workgroups = sapply(1:nrow(d), function(i) {
wgs = which(d[i,grep('WG[1-4]', colnames(d))] == 'y')
wgs= c("Theory", "Tools", "Data", "Dissemination")[wgs]
paste0('[', paste(wgs, collapse=', '), ']')
})
d = data.frame(
name = paste(d$firstName, d$lastName, sep=' '),
homepages = d$homepages,
country_code = d$country_code,
email = d$email,
role = NA,
workgroups = d$workgroups,
mc = d$email %in% mc$Email
)
add = mc[!mc$Email %in% d$email,]
add = data.frame(
name = paste(add$Firstname, add$Lastname, sep=' '),
homepages = '',
country_code = add$country_code,
email = add$Email,
role = NA,
workgroups = '',
mc = TRUE
)
d = rbind(d, add)
set_role = function(d, name, role) {
ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
countries %>%
select(country=name, country_code=code, countr_flag=emoji) %>%
right_join(d)
d = countries %>%
select(country=name, country_code=code, countr_flag=emoji) %>%
right_join(d)
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
cat('people:\n', paste(people, collapse='\n'))
d$country_code
cat('[', paste(d$country_code, collapse=', ', ']')
cat('[', paste(d$country_code, collapse=', '), ']')
cat('[', paste(d$country_code, collapse=', '), ']')
cat('[', paste(unique(d$country_code), collapse=', '), ']')
cat('[', paste(unique(countries$code), collapse=', '), ']')
countries[countries$code == 'ENGLAND',]
View(d)
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
View(d)
cat('[', paste(unique(countries$code), collapse=', '), ']')
cat('[', paste(paste0('"',unique(countries$code),'"'), collapse=', '), ']')
## create option array for countries in config.js
sprintf('{label: "%s", value: "%s"}', countries$name, countries$code)
## create option array for countries in config.js
items = sprintf('{label: "%s", value: "%s"}', countries$name, countries$code)
paste(items, collapse=',')
cat('[', paste(items, collapse=','), ']')
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country_code: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country_code[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
## create yaml string for people
cat('people:\n', paste(people, collapse='\n'))
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
## first make sure mc and d match with country data
fix_country_code <- function(x) {
x[x == 'UK'] = 'GB'
x[x == 'EL'] = 'GR'
x
}
mc$country_code = mc$`CTRY *` %>% fix_country_code
d$country_code = str_extract(d$country, '(?<=\\()[A-Z]+(?=\\))') %>% fix_country_code
## if there are mismatches left, add them to fix countries
mismatches = unique(c(mc$country_code, d$country_code))
mismatches[!mismatches %in% countries$code]
d$workgroups = sapply(1:nrow(d), function(i) {
wgs = which(d[i,grep('WG[1-4]', colnames(d))] == 'y')
wgs= c("Theory", "Tools", "Data", "Dissemination")[wgs]
paste0('[', paste(wgs, collapse=', '), ']')
})
d = data.frame(
name = paste(d$firstName, d$lastName, sep=' '),
homepages = d$homepages,
country_code = d$country_code,
email = d$email,
role = NA,
workgroups = d$workgroups,
mc = d$email %in% mc$Email
)
add = mc[!mc$Email %in% d$email,]
add = data.frame(
name = paste(add$Firstname, add$Lastname, sep=' '),
homepages = '',
country_code = add$country_code,
email = add$Email,
role = NA,
workgroups = '',
mc = TRUE
)
d = rbind(d, add)
set_role = function(d, name, role) {
ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country_code: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country_code[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
## create yaml string for people
cat('people:\n', paste(people, collapse='\n'))
people = sapply(1:nrow(d), function(i) {
sprintf('- name: %s\n  homepage: %s\n  country: %s\n  workgroups: %s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country_code[i], d$workgroups[i], d$role[i], as.numeric(d$mc[i]))
})
## create yaml string for people
cat('people:\n', paste(people, collapse='\n'))
## Just a simple R script to kickstart the 'people' list in content/pages/people.md
## Keeping it here just in case
library(tidyverse)
## DATA FROM E-COST OVERVIEW
## The converted excel export from MC Participants
mc = read_csv('~/Downloads/cost_mc.csv')
## The csv export from WG Applications
d = read_csv2('~/Downloads/WG_applications_export_28-09-2022.csv') %>%
filter(status == 'approved')
countries = read_csv('~/projects/cost-opinion/util/countries.csv')
## first make sure mc and d match with country data
fix_country_code <- function(x) {
x[x == 'UK'] = 'GB'
x[x == 'EL'] = 'GR'
x
}
mc$country_code = mc$`CTRY *` %>% fix_country_code
d$country_code = str_extract(d$country, '(?<=\\()[A-Z]+(?=\\))') %>% fix_country_code
## if there are mismatches left, add them to fix countries
mismatches = unique(c(mc$country_code, d$country_code))
mismatches[!mismatches %in% countries$code]
d$workgroups = sapply(1:nrow(d), function(i) {
wgs = which(d[i,grep('WG[1-4]', colnames(d))] == 'y')
wgs= c("Theory", "Tools", "Data", "Dissemination")[wgs]
paste0(wgs, collapse=';')
})
d = data.frame(
name = paste(d$firstName, d$lastName, sep=' '),
homepages = d$homepages,
country_code = d$country_code,
email = d$email,
role = NA,
workgroups = d$workgroups,
mc = d$email %in% mc$Email
)
add = mc[!mc$Email %in% d$email,]
add = data.frame(
name = paste(add$Firstname, add$Lastname, sep=' '),
homepages = '',
country_code = add$country_code,
email = add$Email,
role = NA,
workgroups = '',
mc = TRUE
)
d = rbind(d, add)
set_role = function(d, name, role) {
ascii <- function(x) iconv(x, to="ASCII//TRANSLIT")
matches = ascii(d$name) == ascii(name)
if (sum(matches) != 1) stop(sprintf('%s matches for %s', sum(matches), name))
d$role[matches] = role
d
}
d = d |>
set_role('Christian Baden', 'AC') |>
set_role('Helle Sjovaag', 'ACV') |>
set_role('Kasper Welbers', 'GHSR') |>
#set_role("Wouter van Atteveldt", "GHSRV") |>
set_role('Agnieszka Stepinska', "WG1L") |>
set_role("Damian Trilling", "WG2L") |>
set_role("Marina Popescu", "WG3L") |>
set_role("Carlos Arcila Calderon", "WV4L")
## we won't publish the email address, just needed it
## for matching
d$email = NULL
## add GH manager (which might not be in member list)
d = rbind(d, data.frame(
name = 'To be determined',
homepages = 'vu homepage',
country_code = 'NL',
role = 'GHM',
workgroups = '',
mc = FALSE
))
d$role[is.na(d$role)] = ''
workgroups = d$workgroups[6]
workgroups
workgroups = strsplit(d$workgroups[6], ';')
workgroups
workgroups = strsplit(d$workgroups[6], ';')[[1]]
workgroups
workgroups = paste('    -', workgroups)
workgroups
workgroups = paste(paste('    -', workgroups), collapse='\n')
workgroups = strsplit(d$workgroups[6], ';')[[1]]
workgroups = paste(paste('    -', workgroups), collapse='\n')
workgroups
people = sapply(1:nrow(d), function(i) {
workgroups = strsplit(d$workgroups[6], ';')[[1]]
workgroups = paste(paste('    -', workgroups), collapse='\n')
sprintf('- name: %s\n  homepage: %s\n  country: %s\n  workgroups:\n%s\n  role: %s\n  mc: %s',
d$name[i], d$homepages[i], d$country_code[i], workgroups, d$role[i], as.numeric(d$mc[i]))
})
## create yaml string for people
cat('people:\n', paste(people, collapse='\n'))
